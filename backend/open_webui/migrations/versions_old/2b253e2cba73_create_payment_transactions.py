"""create payment_transactions

Revision ID: 2b253e2cba73
Revises: a28bdf9d9103
Create Date: 2025-10-23 12:36:37.965615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import open_webui.internal.db
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2b253e2cba73'
down_revision: Union[str, None] = 'a28bdf9d9103'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('tool_id', table_name='tool')
    op.drop_table('tool')
    op.drop_index('model_id', table_name='model')
    op.drop_table('model')
    op.drop_index('memory_id', table_name='memory')
    op.drop_table('memory')
    op.drop_index('prompt_command', table_name='prompt')
    op.drop_table('prompt')
    op.drop_index('idx_oauth_session_expires_at', table_name='oauth_session')
    op.drop_index('idx_oauth_session_user_id', table_name='oauth_session')
    op.drop_index('idx_oauth_session_user_provider', table_name='oauth_session')
    op.drop_table('oauth_session')
    op.drop_table('feedback')
    op.drop_table('config')
    op.drop_index('document_collection_name', table_name='document')
    op.drop_index('document_name', table_name='document')
    op.drop_table('document')
    op.drop_table('message')
    op.drop_index('chatidtag_id', table_name='chatidtag')
    op.drop_table('chatidtag')
    op.drop_table('knowledge')
    op.drop_table('channel')
    op.drop_index('function_id', table_name='function')
    op.drop_index('is_global_idx', table_name='function')
    op.drop_table('function')
    op.drop_table('message_reaction')
    op.drop_table('migratehistory')
    op.drop_table('channel_member')
    op.drop_table('note')
    op.alter_column('auth', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('auth', 'password',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('auth', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('auth_id', table_name='auth')
    op.alter_column('chat', 'user_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('chat', 'title',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('chat', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('chat', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('chat', 'share_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('chat', 'archived',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('chat', 'meta',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True,
               existing_server_default=sa.text("'{}'::json"))
    op.drop_index('chat_id', table_name='chat')
    op.drop_index('chat_share_id', table_name='chat')
    op.create_unique_constraint(None, 'chat', ['share_id'])
    op.alter_column('file', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('file', 'user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('file', 'filename',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('file', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_index('file_id', table_name='file')
    op.alter_column('folder', 'is_expanded',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('folder', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('folder', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.create_unique_constraint(None, 'group', ['id'])
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_index('user_id_idx', table_name='tag')
    op.alter_column('user', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user', 'role',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user', 'profile_image_url',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('user', 'last_active_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('user', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('user', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_index('user_api_key', table_name='user')
    op.drop_index('user_id', table_name='user')
    op.drop_index('user_oauth_sub', table_name='user')
    op.create_unique_constraint(None, 'user', ['api_key'])
    op.create_unique_constraint(None, 'user', ['oauth_sub'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.create_index('user_oauth_sub', 'user', ['oauth_sub'], unique=True)
    op.create_index('user_id', 'user', ['id'], unique=True)
    op.create_index('user_api_key', 'user', ['api_key'], unique=True)
    op.alter_column('user', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('user', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('user', 'last_active_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('user', 'profile_image_url',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('user', 'role',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_index('user_id_idx', 'tag', ['user_id'], unique=False)
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'group', type_='unique')
    op.alter_column('folder', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('folder', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('folder', 'is_expanded',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_index('file_id', 'file', ['id'], unique=True)
    op.alter_column('file', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('file', 'filename',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('file', 'user_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('file', 'id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'chat', type_='unique')
    op.create_index('chat_share_id', 'chat', ['share_id'], unique=True)
    op.create_index('chat_id', 'chat', ['id'], unique=True)
    op.alter_column('chat', 'meta',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('chat', 'archived',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('chat', 'share_id',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('chat', 'updated_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('chat', 'created_at',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('chat', 'title',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('chat', 'user_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_index('auth_id', 'auth', ['id'], unique=True)
    op.alter_column('auth', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('auth', 'password',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('auth', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_table('note',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='note_pkey')
    )
    op.create_table('channel_member',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='channel_member_pkey')
    )
    op.create_table('migratehistory',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('migrated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='migratehistory_pkey')
    )
    op.create_table('message_reaction',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='message_reaction_pkey')
    )
    op.create_table('function',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('meta', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('valves', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_global', sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.create_index('is_global_idx', 'function', ['is_global'], unique=False)
    op.create_index('function_id', 'function', ['id'], unique=True)
    op.create_table('channel',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='channel_pkey')
    )
    op.create_table('knowledge',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='knowledge_pkey')
    )
    op.create_table('chatidtag',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('tag_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('chat_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=False)
    )
    op.create_index('chatidtag_id', 'chatidtag', ['id'], unique=True)
    op.create_table('message',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('channel_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reply_to_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='message_pkey')
    )
    op.create_table('document',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('collection_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='document_pkey')
    )
    op.create_index('document_name', 'document', ['name'], unique=True)
    op.create_index('document_collection_name', 'document', ['collection_name'], unique=True)
    op.create_table('config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='config_pkey')
    )
    op.create_table('feedback',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('version', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('snapshot', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='feedback_pkey')
    )
    op.create_table('oauth_session',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expires_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='oauth_session_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='oauth_session_pkey')
    )
    op.create_index('idx_oauth_session_user_provider', 'oauth_session', ['user_id', 'provider'], unique=False)
    op.create_index('idx_oauth_session_user_id', 'oauth_session', ['user_id'], unique=False)
    op.create_index('idx_oauth_session_expires_at', 'oauth_session', ['expires_at'], unique=False)
    op.create_table('prompt',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('command', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='prompt_pkey')
    )
    op.create_index('prompt_command', 'prompt', ['command'], unique=True)
    op.create_table('memory',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False)
    )
    op.create_index('memory_id', 'memory', ['id'], unique=True)
    op.create_table('model',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('base_model_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('meta', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('params', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False)
    )
    op.create_index('model_id', 'model', ['id'], unique=True)
    op.create_table('tool',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('specs', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('meta', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('valves', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('access_control', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    op.create_index('tool_id', 'tool', ['id'], unique=True)
    # ### end Alembic commands ###
