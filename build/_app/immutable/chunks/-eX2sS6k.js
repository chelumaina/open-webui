import{d as c}from"./DzLIgThl.js";import{g as h}from"./hvQ-lebT.js";const p=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:r})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,null));if(a)throw a;return n},d=async(e,r,a,n,t)=>{let o=null;const i=await fetch(`${c}/chats/import`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:r,meta:a??{},pinned:n,folder_id:t})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(o=s,null));if(o)throw o;return i},w=async(e="",r=null)=>{let a=null;const n=new URLSearchParams;r!==null&&n.append("page",`${r}`);const t=await fetch(`${c}/chats/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(a=o,null));if(a)throw a;return t.map(o=>({...o,time_range:h(o.updated_at)}))},y=async(e="",r)=>{let a=null;const n=await fetch(`${c}/chats/list/user/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n.map(t=>({...t,time_range:h(t.updated_at)}))},j=async(e="")=>{let r=null;const a=await fetch(`${c}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a},f=async e=>{let r=null;const a=await fetch(`${c}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a},$=async(e,r,a=1)=>{let n=null;const t=new URLSearchParams;t.append("text",r),t.append("page",`${a}`);const o=await fetch(`${c}/chats/search?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).then(i=>i).catch(i=>(n=i,null));if(n)throw n;return o.map(i=>({...i,time_range:h(i.updated_at)}))},T=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/folder/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},C=async e=>{let r=null;const a=await fetch(`${c}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a},m=async e=>{let r=null;const a=await fetch(`${c}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a},B=async e=>{let r=null;const a=await fetch(`${c}/chats/all/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a},g=async(e="")=>{let r=null;const a=await fetch(`${c}/chats/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,null));if(r)throw r;return a.map(n=>({...n,time_range:h(n.updated_at)}))},A=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,null));if(a)throw a;return n},z=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/share/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},S=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,null));if(a)throw a;return n},E=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/pin`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,null));if(a)throw a;return n},I=async(e,r,a)=>{let n=null;const t=await fetch(`${c}/chats/${r}/clone`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...a&&{title:a}})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,"detail"in o?n=o.detail:n=o,null));if(n)throw n;return t},P=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/clone/shared`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,null));if(a)throw a;return n},O=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},G=async(e,r,a)=>{let n=null;const t=await fetch(`${c}/chats/${r}/folder`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({folder_id:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,null));if(n)throw n;return t},_=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/archive`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},L=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},b=async(e,r,a)=>{let n=null;const t=await fetch(`${c}/chats/${r}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({chat:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,null));if(n)throw n;return t},v=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,null));if(a)throw a;return n},N=async(e,r)=>{let a=null;const n=await fetch(`${c}/chats/${r}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,null));if(a)throw a;return n},J=async(e,r,a)=>{let n=null;const t=await fetch(`${c}/chats/${r}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o.detail,null));if(n)throw n;return t},U=async(e,r,a)=>{let n=null;const t=await fetch(`${c}/chats/${r}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,null));if(n)throw n;return t},x=async e=>{let r=null;const a=await fetch(`${c}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n.detail,null));if(r)throw r;return a},D=async e=>{let r=null;const a=await fetch(`${c}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n.detail,null));if(r)throw r;return a};export{D as A,x as B,p as C,N as a,J as b,P as c,B as d,U as e,A as f,z as g,L as h,w as i,y as j,v as k,m as l,j as m,_ as n,C as o,S as p,g as q,I as r,O as s,E as t,b as u,T as v,d as w,G as x,$ as y,f as z};
//# sourceMappingURL=-eX2sS6k.js.map
