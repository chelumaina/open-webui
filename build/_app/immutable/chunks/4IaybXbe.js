import{e as l,g as s}from"./DzLIgThl.js";const p=async(r="")=>{let e=null;const n=await fetch(`${s}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...r&&{authorization:`Bearer ${r}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return n},u=async(r="",e)=>{let n=null;const o=await fetch(`${s}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...r&&{authorization:`Bearer ${r}`}},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?n=t.detail:n="Server connection failed",null));if(n)throw n;return o},f=async(r,e)=>{let n=null;const o=await fetch(`${r}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return n=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(n)throw n;return o},w=async(r,e)=>{let n=null;const o=await fetch(`${s}/models${typeof e=="number"?`/${e}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...r&&{authorization:`Bearer ${r}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return n=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(n)throw n;return o},d=async(r="",e="https://api.openai.com/v1",n="",o=!1)=>{if(!e)throw"OpenAI: URL is required";let t=null,a=null;if(o){if(a=await fetch(`${e}/models`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${n}`,"Content-Type":"application/json"}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var c;return t=`OpenAI: ${((c=i==null?void 0:i.error)==null?void 0:c.message)??"Network Problem"}`,[]}),t)throw t}else if(a=await fetch(`${s}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({url:e,key:n})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var c;return t=`OpenAI: ${((c=i==null?void 0:i.error)==null?void 0:c.message)??"Network Problem"}`,[]}),t)throw t;return a},y=async(r="",e,n=`${l}/api`)=>{const o=new AbortController;let t=null;const a=await fetch(`${n}/chat/completions`,{signal:o.signal,method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(i=>(t=i,null));if(t)throw t;return[a,o]},j=async(r="",e,n=`${l}/api`)=>{let o=null;const t=await fetch(`${n}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(o=`${(a==null?void 0:a.detail)??a}`,null));if(o)throw o;return t};export{p as a,w as b,y as c,j as d,f as g,u,d as v};
//# sourceMappingURL=4IaybXbe.js.map
