import{e as h}from"./DzLIgThl.js";import{a as A}from"./hvQ-lebT.js";import{g as O}from"./4IaybXbe.js";import"./Cdll-xsj.js";import{t as b}from"./DMk2eJ1b.js";const z=async(a="",i=null,t=!1)=>{let n=null;const e=await fetch(`${h}/api/models${t?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(n=r,null));if(n)throw n;let o=(e==null?void 0:e.data)??[];if(i&&!t){let r=[];if(i){const s=i.OPENAI_API_BASE_URLS,d=i.OPENAI_API_KEYS,j=i.OPENAI_API_CONFIGS,c=[];for(const u in s){const f=s[u];if(u.toString()in j){const y=j[u.toString()]??{},$=(y==null?void 0:y.enable)??!0,T=(y==null?void 0:y.model_ids)??[];if($)if(T.length>0){const g={object:"list",data:T.map(p=>({id:p,name:p,owned_by:"openai",openai:{id:p},urlIdx:u}))};c.push((async()=>g)())}else c.push((async()=>await O(f,d[u]).then(g=>g).catch(g=>({object:"list",data:[],urlIdx:u})))());else c.push((async()=>({object:"list",data:[],urlIdx:u}))())}}const m=await Promise.all(c);for(const u in m){const f=m[u],y=j[u.toString()]??{};let $=Array.isArray(f)?f:(f==null?void 0:f.data)??[];$=$.map(p=>({...p,openai:{id:p.id},urlIdx:u}));const T=y.prefix_id;if(T)for(const p of $)p.id=`${T}.${p.id}`;const g=y.tags;if(g)for(const p of $)p.tags=g;r=r.concat($)}}o=o.concat(r.map(s=>({...s,name:(s==null?void 0:s.name)??(s==null?void 0:s.id),direct:!0})));const l={};for(const s of o)l[s.id]=s;o=Object.values(l)}return o},N=async(a,i)=>{let t=null;const n=await fetch(`${h}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>("detail"in e?t=e.detail:t=e,null));if(t)throw t;return n},_=async(a,i,t)=>{let n=null;const e=await fetch(`${h}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(t)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?n=o.detail:n=o,null));if(n)throw n;return e},R=async(a,i)=>{let t=null;const n=await fetch(`${h}/api/tasks/stop/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>("detail"in e?t=e.detail:t=e,null));if(t)throw t;return n},E=async(a,i)=>{let t=null;const n=await fetch(`${i}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?t=o.detail:t=o,null));if(t)throw t;return{openapi:n,info:n.info,specs:A(n)}},U=async(a,i)=>(await Promise.all(i.filter(t=>{var n;return(n=t==null?void 0:t.config)==null?void 0:n.enable}).map(async t=>{const n=await E(t==null?void 0:t.key,(t==null?void 0:t.url)+"/"+((t==null?void 0:t.path)??"openapi.json")).catch(e=>(b.error(a.t("Failed to connect to {{URL}} OpenAPI tool server",{URL:(t==null?void 0:t.url)+"/"+((t==null?void 0:t.path)??"openapi.json")})),null));if(n){const{openapi:e,info:o,specs:r}=n;return{url:t==null?void 0:t.url,openapi:e,info:o,specs:r}}}))).filter(t=>t),J=async(a,i,t,n,e)=>{let o=null;try{const r=Object.entries(e.openapi.paths).find(([p,w])=>Object.entries(w).some(([S,P])=>P.operationId===t));if(!r)throw new Error(`No matching route found for operationId: ${t}`);const[l,s]=r,d=Object.entries(s).find(([p,w])=>w.operationId===t);if(!d)throw new Error(`No matching method found for operationId: ${t}`);const[j,c]=d,m={},u={};let f={};c.parameters&&c.parameters.forEach(p=>{const w=p.name,S=p.in;n.hasOwnProperty(w)&&(S==="path"?m[w]=n[w]:S==="query"&&(u[w]=n[w]))});let y=`${i}${l}`;if(Object.entries(m).forEach(([p,w])=>{y=y.replace(new RegExp(`{${p}}`,"g"),encodeURIComponent(w))}),Object.keys(u).length>0){const p=new URLSearchParams(Object.entries(u).map(([w,S])=>[w,String(S)])).toString();y+=`?${p}`}if(c.requestBody&&c.requestBody.content){const p=Object.keys(c.requestBody.content)[0];if(n!==void 0)f=n;else throw new Error(`Request body expected for operation '${t}' but none found.`)}const $={"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}};let T={method:j.toUpperCase(),headers:$};["post","put","patch"].includes(j.toLowerCase())&&c.requestBody&&(T.body=JSON.stringify(f));const g=await fetch(y,T);if(!g.ok){const p=await g.text();throw new Error(`HTTP error! Status: ${g.status}. Message: ${p}`)}return await g.json()}catch(r){return o=r.message,console.error("API Request Error:",o),{error:o}}},L=async(a="")=>{let i=null;const t=await fetch(`${h}/api/v1/tasks/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(i=n,null));if(i)throw i;return t},q=async(a,i)=>{let t=null;const n=await fetch(`${h}/api/v1/tasks/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>("detail"in e?t=e.detail:t=e,null));if(t)throw t;return n},G=async(a="",i,t,n)=>{var r,l;let e=null;const o=await fetch(`${h}/api/v1/tasks/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:t,...n&&{chat_id:n}})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>("detail"in s&&(e=s.detail),null));if(e)throw e;try{const d=(((l=(r=o==null?void 0:o.choices[0])==null?void 0:r.message)==null?void 0:l.content)??"").replace(/['‘’`]/g,'"'),j=d.indexOf("{"),c=d.lastIndexOf("}");if(j!==-1&&c!==-1){const m=d.substring(j,c+1),u=JSON.parse(m);return u&&u.tags?Array.isArray(u.tags)?u.tags:[]:[]}return[]}catch(s){return console.error("Failed to parse response: ",s),[]}},M=async(a="",i,t,n)=>{var l,s;let e=null;const o=await fetch(`${h}/api/v1/tasks/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:t,...n&&{chat_id:n}})}).then(async d=>{if(!d.ok)throw await d.json();return d.json()}).catch(d=>("detail"in d&&(e=d.detail),null));if(e)throw e;const r=((s=(l=o==null?void 0:o.choices[0])==null?void 0:l.message)==null?void 0:s.content.replace(/["']/g,""))??null;return r&&new RegExp("\\p{Extended_Pictographic}","u").test(r)?r.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},D=async(a="",i,t,n,e="search query")=>{var d,j;const o=new AbortController;let r=null;const l=await fetch(`${h}/api/v1/tasks/auto/completions`,{signal:o.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:t,...n&&{messages:n},type:e,stream:!1})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>("detail"in c&&(r=c.detail),null));if(r)throw r;const s=((j=(d=l==null?void 0:l.choices[0])==null?void 0:d.message)==null?void 0:j.content)??"";try{const c=s.indexOf("{"),m=s.lastIndexOf("}");if(c!==-1&&m!==-1){const u=s.substring(c,m+1),f=JSON.parse(u);return f&&f.text?f.text:""}return s}catch(c){return console.error("Failed to parse response: ",c),s}},F=async(a="",i,t,n)=>{const e=new AbortController;let o=null;const r=await fetch(`${h}/api/v1/tasks/moa/completions`,{signal:e.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:t,responses:n,stream:!0})}).catch(l=>(o=l,null));if(o)throw o;return[r,e]},V=async(a="")=>{let i=null;const t=await fetch(`${h}/api/v1/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(i=e,null));if(i)throw i;return(t==null?void 0:t.data)??[]},v=async(a,i,t)=>{let n=null;const e=new FormData;e.append("file",i),e.append("urlIdx",t);const o=await fetch(`${h}/api/v1/pipelines/upload`,{method:"POST",headers:{...a&&{authorization:`Bearer ${a}`}},body:e}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>("detail"in r?n=r.detail:n=r,null));if(n)throw n;return o},W=async(a,i,t)=>{let n=null;const e=await fetch(`${h}/api/v1/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({url:i,urlIdx:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?n=o.detail:n=o,null));if(n)throw n;return e},K=async(a,i,t)=>{let n=null;const e=await fetch(`${h}/api/v1/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({id:i,urlIdx:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>("detail"in o?n=o.detail:n=o,null));if(n)throw n;return e},Y=async(a,i)=>{let t=null;const n=new URLSearchParams;i!==void 0&&n.append("urlIdx",i);const e=await fetch(`${h}/api/v1/pipelines/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r,null));if(t)throw t;return(e==null?void 0:e.data)??[]},H=async(a,i,t)=>{let n=null;const e=new URLSearchParams;t!==void 0&&e.append("urlIdx",t);const o=await fetch(`${h}/api/v1/pipelines/${i}/valves?${e.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(n=r,null));if(n)throw n;return o},Q=async(a,i,t)=>{let n=null;const e=new URLSearchParams;t!==void 0&&e.append("urlIdx",t);const o=await fetch(`${h}/api/v1/pipelines/${i}/valves/spec?${e.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(n=r,null));if(n)throw n;return o},X=async(a="",i,t,n)=>{let e=null;const o=new URLSearchParams;n!==void 0&&o.append("urlIdx",n);const r=await fetch(`${h}/api/v1/pipelines/${i}/valves/update?${o.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(t)}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>("detail"in l?e=l.detail:e=l,null));if(e)throw e;return r},Z=async()=>{let a=null;const i=await fetch(`${h}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,null));if(a)throw a;return i},tt=async()=>{let a=null;const i=await fetch(`${h}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,null));if(a)throw a;return i},nt=async a=>{let i=null;const t=await fetch(`${h}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(i=n,null));if(i)throw i;return t},et=async a=>{let i=null;const t=await fetch(`${h}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(i=n,null));if(i)throw i;return t.url},at=async(a,i)=>{let t=null;const n=await fetch(`${h}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({url:i})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(t=e,null));if(t)throw t;return n.url};export{Z as a,E as b,G as c,et as d,J as e,nt as f,z as g,V as h,X as i,Q as j,H as k,Y as l,W as m,K as n,v as o,L as p,q,U as r,tt as s,D as t,at as u,M as v,_ as w,R as x,F as y,N as z};
//# sourceMappingURL=CP68AaU9.js.map
