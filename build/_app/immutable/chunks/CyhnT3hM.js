import{O as r}from"./DzLIgThl.js";const s=async(o="",i="",e="")=>{let t=null;const n=await fetch(`${r}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({url:i,key:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>{var l;return t=`Ollama: ${((l=a==null?void 0:a.error)==null?void 0:l.message)??"Network Problem"}`,[]});if(t)throw t;return n},h=async(o="")=>{let i=null;const e=await fetch(`${r}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>("detail"in t?i=t.detail:i="Server connection failed",null));if(i)throw i;return e},u=async(o="",i)=>{let e=null;const t=await fetch(`${r}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({...i})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>("detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t},p=async(o,i)=>{let e=null;const t=await fetch(`${r}/api/version`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>("detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return(t==null?void 0:t.version)??!1},d=async(o="",i=null)=>{let e=null;const t=await fetch(`${r}/api/tags${i!==null?`/${i}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>("detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return((t==null?void 0:t.models)??[]).map(n=>({id:n.model,name:n.name??n.model,...n})).sort((n,a)=>n.name.localeCompare(a.name))},f=async(o,i,e=null)=>{let t=null;const n=await fetch(`${r}/api/create${e!==null?`/${e}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(i)}).catch(a=>(t=a,null));if(t)throw t;return n},y=async(o,i,e=null)=>{let t=null;const n=await fetch(`${r}/api/delete${e!==null?`/${e}`:""}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({name:i})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>!0).catch(a=>(t=a,"detail"in a&&(t=a.detail),null));if(t)throw t;return n},w=async(o,i,e=null)=>{let t=null;const n=new AbortController,a=await fetch(`${r}/api/pull${e!==null?`/${e}`:""}`,{signal:n.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({name:i})}).catch(l=>(t=l,"detail"in l&&(t=l.detail),null));if(t)throw t;return[a,n]},$=async(o,i,e=null)=>{let t=null;const n=await fetch(`${r}/models/download${e!==null?`/${e}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({url:i})}).catch(a=>(t=a,"detail"in a&&(t=a.detail),null));if(t)throw t;return n},m=async(o,i,e=null)=>{let t=null;const n=new FormData;n.append("file",i);const a=await fetch(`${r}/models/upload${e!==null?`/${e}`:""}`,{method:"POST",headers:{Authorization:`Bearer ${o}`},body:n}).catch(l=>(t=l,"detail"in l&&(t=l.detail),null));if(t)throw t;return a};export{d as a,$ as b,f as c,y as d,h as e,u as f,p as g,w as p,m as u,s as v};
//# sourceMappingURL=CyhnT3hM.js.map
