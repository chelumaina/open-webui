import{d as s,t as i}from"./DzLIgThl.js";import{b as l}from"./hvQ-lebT.js";const d=async a=>{let r=null;const e=await fetch(`${s}/users/default/permissions`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(r=n.detail,null));if(r)throw r;return e},p=async(a,r)=>{let e=null;const n=await fetch(`${s}/users/default/permissions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...r})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return n},f=async(a,r,e)=>{let n=null;const t=await fetch(`${s}/users/update/role`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({id:r,role:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(n=o.detail,null));if(n)throw n;return t},w=async a=>{let r=null;const e=await fetch(`${s}/users/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(r=n.detail,null));if(r)throw r;return e||[]},y=async a=>{let r=null;const e=await fetch(`${s}/users/user/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();let t=await n.json();return i.set(t.tokens),t}).catch(n=>(r=n.detail,null));if(r)throw r;return e},j=async(a,r)=>{let e=null;const n=await fetch(`${s}/users/user/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...r})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return n},m=async(a,r)=>{let e=null;const n=await fetch(`${s}/users/${r}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return n},u=async(a,r)=>{let e=null;const n=await fetch(`${s}/users/user/info/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...r})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return n},$=async a=>{const r=await l().catch(e=>null);return r?(await u(a,{location:r}),r):null},T=async(a,r)=>{let e=null;const n=await fetch(`${s}/users/${r}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(e=t.detail,null));if(e)throw e;return n},g=async(a,r,e)=>{let n=null;const t=await fetch(`${s}/users/${r}/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({profile_image_url:e.profile_image_url,email:e.email,name:e.name,password:e.password!==""?e.password:void 0})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(n=o.detail,null));if(n)throw n;return t};export{f as a,w as b,d as c,T as d,p as e,u as f,m as g,j as h,y as i,$ as j,g as u};
//# sourceMappingURL=Du-v1D_Q.js.map
