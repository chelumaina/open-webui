services:
  # ollama:
  #   volumes:
  #     - ./ollama:/root/.ollama
  #   container_name: ollama
  #   hostname: ollama
  #   # pull_policy: always
  #   ports:
  #     - 11435:11434
  #   # tty: true
  #   restart: unless-stopped
  #   image: ollama/ollama:latest
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.20
  #   extra_hosts:
  #     # - "host.docker.internal:redis-master"
  #     - "google.com:142.250.190.78"

  backend:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: open_webui:latest
    env_file:
      - .env
    # environment:
    #   # REDIS_URL: sentinel://mymaster
    #   REDIS_URL: redis://:mystrongpassword@redis-sentinel/1
    #   REDIS_SENTINEL_HOSTS: redis-sentinel
    #   REDIS_SENTINEL_PORT: 26379
    #   REDIS_PASSWORD: mystrongpassword
    container_name: backend 
    hostname: backend 
    # entrypoint: ["/bin/sh", "/app/backend/dev.sh"]
    # command: bash -c "python3 -m venv /venv && uvicorn main:app --port 8080 --host 0.0.0.0 --forwarded-allow-ips '*' --reload"
    ports:
      - 8080:8080 
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
      - ./CHANGELOG.md:/app/open_webui/CHANGELOG.md
      # - ./static:/app/open_webui/static
      # - ./build:/build
    # links:
    #   - pg_db
    #   # - redis-sentinel
    #   - ollama
    # depends_on:
    #   - pg_db 
    #   # - redis-sentinel 
    #   - ollama
    networks:
      mynetwork:
        ipv4_address: 172.28.0.22
    restart: unless-stopped
    extra_hosts:
      # - "host.docker.internal:redis-master"
      - "google.com:8.8.8.8"

  # nginx: 
  #   container_name: open-webui-nginx 
  #   hostname: open-webui-nginx
  #   image: nginx:alpine
  #   ports:
  #     - "3005:80"
  #     # - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     # - ./static:/usr/static
  #     # - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - backend
  #   links:
  #     - backend
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.23
  #   restart: unless-stopped
  #   extra_hosts:
  #     # - "host.docker.internal:host-gateway"
  #     - "google.com:142.250.190.78"

  # certbot:
  #   container_name: certbot
  #   hostname: 'certbot'
  #   image: certbot/certbot
  #   volumes: 
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #     - ./logs:/var/log/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 48h & wait $${!}; done;'"
  #   depends_on: 
  #     - nginx
  #     - backend  
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.24 
  #   extra_hosts:
  #     # - "host.docker.internal:host-gateway"
  #     - "google.com:142.250.190.78"
 
  # pg_db:
  #   container_name: pg_db
  #   hostname: pg_db
  #   image: postgres:latest
  #   restart: always
  #   environment:
  #     POSTGRES_USER: transcription
  #     POSTGRES_PASSWORD: "62Y2xXcDojJ52054"
  #     POSTGRES_DB: smart_ai_latest
  #   ports:
  #     - "5509:5432"
  #   volumes:
  #     - ./data/postgres-data:/var/lib/postgresql/data
  #     # - ./logs:/var/log/pg_db
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.25 
  #   extra_hosts:
  #     # - "host.docker.internal:host-gateway"
  #     - "google.com:142.250.190.78"
  
  # redis-master:
  #   image: redis:7
  #   container_name: redis-master
  #   hostname: redis-master
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.26
  #   restart: unless-stopped
  #   volumes:
  #     - ./redis/master:/usr/local/etc/redis
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf"] 

  #   extra_hosts:
  #     # - "host.docker.internal:host-gateway"
  #     - "google.com:142.250.190.78"

  # redis-sentinel:
  #   image: redis:7
  #   container_name: redis-sentinel
  #   hostname: redis-sentinel
  #   depends_on:
  #     - redis-master
  #   links:
  #     - redis-master
  #   ports:
  #     - "26379:26379"
  #   networks:
  #     mynetwork:
  #       ipv4_address: 172.28.0.27
  #   restart: unless-stopped
  #   volumes:
  #     - ./redis/sentinel-data:/usr/local/etc/redis
  #     # - ./sentinel-data:/data
  #   command: ["redis-server", "/usr/local/etc/redis/sentinel.conf", "--sentinel"]  
  #   extra_hosts:
  #     # - "host.docker.internal:host-gateway"
  #     - "google.com:142.250.190.78"


networks:
  mynetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

