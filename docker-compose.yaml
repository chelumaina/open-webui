services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend 
    hostname: frontend
    depends_on:
      - backend 
    command: sh -c "npm run dev" 
    ports:
      - 3000:5173 
      # - 8080:8080 
    volumes:
      - ./:/app
      
    restart: unless-stopped
    links:
      - backend
    networks:
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env
    container_name: backend 
    hostname: backend 
    # command: sh -c "conda init && conda activate open-webui && sh dev.sh" 
    command: bash -c "source ~/.bashrc && conda activate open-webui && sh dev.sh"
    ports:
      # - 3000:5173 
      - 8080:8080 
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
      - ./CHANGELOG.md:/app/open_webui/CHANGELOG.md
      # - ./CHANGELOG.md:/app/CHANGELOG.md
      # - ./backend:/app/backend

    networks:
      - mynetwork
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"


  nginx: 
    container_name: open-webui-nginx 
    hostname: open-webui-nginx
    image: nginx:alpine
    ports:
      - "88:80"
      # - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
    networks:
      - mynetwork
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  mynetwork:

# services:

#   open-webui:
#     build:
#       context: .
#       args:
#         OLLAMA_BASE_URL: '/ollama'
#       dockerfile: Dockerfile
#     image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
#     container_name: open-webui
#     # command: sh -c "npm run dev" 
#     # volumes:
#       # - ./:/app/
#     ports:
#       - ${OPEN_WEBUI_PORT-3001}:8080
#     env_file:
#       - .env
#     environment:
#       - 'OLLAMA_BASE_URL=http://host.docker.internal:11434'
#       - 'WEBUI_SECRET_KEY=${SECRET_KEY}'
#       - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
#       - 'LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}'
#       - 'LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}'
#     extra_hosts:
#       - host.docker.internal:host-gateway
#     restart: unless-stopped

#   watchtower:
#     container_name: watchtower
#     image: containrrr/watchtower:latest
#     restart: unless-stopped
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     environment:
#       - WATCHTOWER_CLEANUP=true
#       - WATCHTOWER_POLL_INTERVAL=1800

# volumes:
#   ollama: {}
#   open-webui: {}
