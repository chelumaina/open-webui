services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "90:80"   # Expose port 80 for HTTP
      # - "443:443" # Expose port 443 for HTTPS
    networks:
      - app-network
    volumes:
      - ./nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro  # Mount custom Nginx config
      - ./nginx/conf.d/logs:/var/log/nginx
      - ./nginx/letsencrypt/logs:/var/log/letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./static:/usr/src
    restart: always
    depends_on:
     - open-webui
    links:
     - open-webui
    extra_hosts:
      - "google.com:142.250.190.78"

  certbot_app:
    container_name: certbot_app
    hostname: 'certbot_app'
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    #- ./logs:/var/log/certbot_app
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 48h & wait $${!}; done;'"
    depends_on: 
      - nginx   
    networks:
      - app-network
    extra_hosts:
      - "google.com:142.250.190.78"

  ollama:
    volumes:
      - ./ollama:/root/.ollama
    container_name: ollama
    hostname: ollama
    # pull_policy: always
    # ports:
    #   - 11435:11434
    expose:
      - 11435
    # tty: true
    environment:
      - OLLAMA_NUM_THREADS=8
      - OLLAMA_BATCH_SIZE=32
      - OLLAMA_MEMORY_GB=12
    deploy:
      resources:
        limits:
          memory: 14G
        reservations:
          memory: 12G
    mem_limit: 14g
    ulimits:
      memlock:
        soft: -1
        hard: -1

    restart: unless-stopped
    image: ollama/ollama:latest
    networks:
      - app-network
    extra_hosts:
      # - "host.docker.internal:redis-master"
      - "google.com:142.250.190.78"


  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3005:8080"
    expose:
      - 8080
    volumes:
      # - ./open-webui-data:/app/backend/data
      - ./backend:/app/backend 
      - ./build:/app/build
      - ./CHANGELOG.md:/app/CHANGELOG.md
      - ./package.json:/app/package.json
      - ./.env:/app/.env
      # - ./static:/app/build/static
      # - ./static:/app/backend/open-webui/static
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    networks:
      - app-network
    links:
      - pg_db
      - redis-sentinel
      - ollama
    depends_on:
      - pg_db
      - redis-sentinel
      - ollama

 
  pg_db:
    container_name: pg_db
    hostname: pg_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: transcription
      POSTGRES_PASSWORD: "62Y2xXcDojJ52054"
      POSTGRES_DB: smart_ai_latest
    # ports:
    #   - "5509:5432"
    expose:
      - 5432
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
    #   # - ./logs:/var/log/pg_db
    networks:
      - app-network
    extra_hosts:
      # - "host.docker.internal:host-gateway"
      - "google.com:142.250.190.78"
  
  redis-master:
    image: redis:7
    container_name: redis-master
    hostname: redis-master
    # ports:
    #   - "6379:6379"
    expose:
      - 6379
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./redis/master:/usr/local/etc/redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"] 

    extra_hosts:
     - "google.com:142.250.190.78"

  redis-sentinel:
    image: redis:7
    container_name: redis-sentinel
    hostname: redis-sentinel
    depends_on:
      - redis-master
    links:
      - redis-master
    # ports:
    #   - "26379:26379"
    expose:
      - 26379
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./redis/sentinel-data:/usr/local/etc/redis
      # - ./sentinel-data:/data
    command: ["redis-server", "/usr/local/etc/redis/sentinel.conf", "--sentinel"]
    extra_hosts:
      # - "host.docker.internal:host-gateway"
      - "google.com:142.250.190.78"
 
networks:
  app-network:
    driver: bridge
    external: true
volumes:
  ollama: {}
  open-webui: {}
