#  events {
#     worker_connections 2048;  # Maximum number of simultaneous connections per worker process
# }


user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;  # Use 'kqueue' for BSD/macOS
}


http {

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Log Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # # Include per-site config
    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;


   upstream open_webui_app {
       server open-webui:8080;  # 'webui' is the service name in the Docker network
   }

   upstream sonix_app {
       server web_server:8000;  # 'web_server' is the service name in the Docker network
   }

   # Use a map to check User-Agent headers
    map $http_user_agent $blocked_user_agent {
        default 0;
        "~*curl" 1;
        "~*wget" 1;
        # "~*bot" 1;
        # "~*spider" 1;
        # "~*crawl" 1;
        "~*Custom-AsyncHttpClient" 1;
        "~*Cpanel-HTTP-Client/1.0" 1;
        "Go-http-client/1.1" 1;
    }


##############################################
## NEUROHOO ##
## REDIRECT TO HTTPS ##
##############################################
    server {
        listen 80;
        server_name localhost 173.249.1.30 neurohog.com;
        client_max_body_size 4096M; 
        server_tokens off;
        access_log  /var/log/nginx/neurohog.access.log;    
        error_log  /var/log/nginx/neurohog.error.log;


        # SSL settings
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        # add_header Content-Security-Policy "default-src 'self'";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;


        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        # location /favicon.ico {
        #     log_not_found off;
        #     access_log off;
        # }


        # # WebSocket endpoint
        # location /ws/ {
        #     proxy_pass http://open_webui_app;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host; 
        #     proxy_read_timeout 86400;
        # }

        # location /static/ {
        #     alias /usr/src/static/; 
        #     add_header Cache-Control "public, max-age=31536000";
        #     expires max;
        #     autoindex off;
        # }
        # location / {
        #     proxy_pass http://open_webui_app;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    
        
        return 301 https://neurohog.com$request_uri;
    }



    server {
        listen 443 ssl;
        server_name neurohog.com;
        client_max_body_size 4096M; 
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/neurohog.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/neurohog.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # add_header X-Content-Type-Options nosniff;
        # add_header X-Frame-Options DENY;
        # add_header X-XSS-Protection "1; mode=block";


        # SSL settings
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        # add_header Content-Security-Policy "default-src 'self'";
        # add_header Content-Security-Policy: default-src 'self'; style-src 'self' 'unsafe-inline';

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;


    
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    
        location /static/ {
            alias /usr/src/static/; 
            add_header Cache-Control "public, max-age=31536000";
            expires max;
            autoindex off;
        }

        # WebSocket endpoint
        location /ws/ {
            proxy_pass http://open_webui_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host; 
            client_max_body_size 25M; 

            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Forwarded-Scheme $scheme;
            

            # Websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            ##
            # Disable buffering for the streaming responses (SSE)
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            ##
            # Conections Timeouts (1hr)
            keepalive_timeout 3600;
            proxy_connect_timeout 3600;
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;
            ##

        }

        location / {
            proxy_pass http://open_webui_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; 
            client_max_body_size 25M;



            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Forwarded-Scheme $scheme;
            

         
            # Disable buffering for the streaming responses (SSE)
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            ##
            # Conections Timeouts (1hr)
            keepalive_timeout 3600;
            proxy_connect_timeout 3600;
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;
           
        }
 
    

        # Reject requests that end with .php or .env
        location ~* \.(php|env|git)$ {
            return 403;  # Forbidden
        }

        # Reject requests that contain /wp/
        location /wp/ {
            return 403;  # Forbidden
        }

        location /geoserver/ {
            return 403;  # Forbidden
        } 

        # Block specific file extensions
        location ~* \.(php|env|git|ini|log|sql|conf|bak|old|sh|yml)$ {
            return 403;
        }

        # Block WordPress requests
        location ~* /(wp-admin|wp-login|wp-content|wp-includes)/ {
            return 403;
        }

        # Block HEAD and TRACE requests
        if ($request_method ~* (HEAD|TRACE)) {
            return 403;
        }

        # Block malicious User-Agents
        if ($blocked_user_agent) {
            return 403;
        }

        location ~* \.(git|env|config|dockerignore|gitignore|npmrc|yarnrc|bashrc|bash_profile|zshrc|DS_Store|thumbs\.db|desktop\.ini|gitmodules|composer\.json|package\.json|Pipfile|Pipfile\.lock|requirements\.txt|sqlite3|db|tmp|logs|backups|cache|error_log|access_log|secrets\.json|wp-admin) { 
            deny all; 
            return 403; 
        } 

    }
 
# ##############################################
## # AISPEECHPRO ##
# ## REDIRECT to WWW  ##
# ##############################################
    
server {
    listen 80;
    # http2;
    server_name aispeechpro.com www.aispeechpro.com;
    client_max_body_size 4096M; 
    server_tokens off;
    access_log  /var/log/nginx/aispeechpro.access.log;    
    error_log  /var/log/nginx/aispeechpro.error.log;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # location / {
    #     return 301 https://www.aispeechpro.com$request_uri;
    # }

    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    


    location /static/ {
        alias /usr/src/app/apps/static/;
        expires 1d;  # Cache for 30 days 
        add_header Cache-Control "public, max-age=31536000";
    }
    location /static/admin/ {
        alias /usr/src/app/apps/static/admin/;
        expires 1d;  # Cache for 30 days 
        add_header Cache-Control "public, max-age=31536000";
    }
    
    location /media {
        alias /usr/src/app/media; # Change to your own media directory here.
        access_log off;
    }
    location / {
        proxy_pass http://sonix_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    } 



     # Reject requests that end with .php or .env
    location ~* \.(php|env|git)$ {
        return 403;  # Forbidden
    }

    # Reject requests that contain /wp/
    location /wp/ {
        return 403;  # Forbidden
    }

    location /geoserver/ {
        return 403;  # Forbidden
    } 

    # Block specific file extensions
    location ~* \.(php|env|git|ini|log|sql|conf|bak|old|sh|yml)$ {
        return 403;
    }

    # Block WordPress requests
    location ~* /(wp-admin|wp-login|wp-content|wp-includes)/ {
        return 403;
    }

    # Block HEAD and TRACE requests
    if ($request_method ~* (HEAD|TRACE)) {
        return 403;
    }

    # Block malicious User-Agents
    if ($blocked_user_agent) {
        return 403;
    }
    location ~* \.(git|env|config|dockerignore|gitignore|npmrc|yarnrc|bashrc|bash_profile|zshrc|DS_Store|thumbs\.db|desktop\.ini|gitmodules|composer\.json|package\.json|Pipfile|Pipfile\.lock|requirements\.txt|sqlite3|db|tmp|logs|backups|cache|error_log|access_log|secrets\.json|admin|wp-admin) { 
        deny all; 
        return 403; 
    } 
    #   # Limit the size of POST requests
    #   client_max_body_size 1M;   
}




    # server {
    #     listen 443 ssl;
    #     server_name aispeechpro.com;
    #     client_max_body_size 4096M; 
    #     server_tokens off;

    #     ssl_certificate /etc/letsencrypt/live/aispeechpro.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/aispeechpro.com/privkey.pem;
    #     include /etc/letsencrypt/options-ssl-nginx.conf;
    #     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    #     add_header X-Content-Type-Options nosniff;
    #     add_header X-Frame-Options DENY;
    #     add_header X-XSS-Protection "1; mode=block";
    
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/certbot;
    #     }
    #     location /favicon.ico {
    #         log_not_found off;
    #         access_log off;
    #     }
     
    #     location / {
    #         proxy_pass http://hello_django;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     location /static/ {
    #         alias /usr/src/app/apps/static/;
    #         expires 1d;  # Cache for 30 days
    #         add_header Cache-Control "public, max-age=31536000";
    #     }
    #     location /static/admin/ {
    #         alias /usr/src/app/apps/static/admin/;
    #         expires 1d;  # Cache for 30 days
    #         add_header Cache-Control "public, max-age=31536000";
    #     }
        
    #     location /media {
    #         alias /usr/src/app/media; # Change to your own media directory here.
    #         access_log off;
    #     }



    #     # Reject requests that end with .php or .env
    #     location ~* \.(php|env|git)$ {
    #         return 403;  # Forbidden
    #     }

    #     # Reject requests that contain /wp/
    #     location /wp/ {
    #         return 403;  # Forbidden
    #     }

    #     location /geoserver/ {
    #         return 403;  # Forbidden
    #     } 

    #     # Block specific file extensions
    #     location ~* \.(php|env|git|ini|log|sql|conf|bak|old|sh|yml)$ {
    #         return 403;
    #     }

    #     # Block WordPress requests
    #     location ~* /(wp-admin|wp-login|wp-content|wp-includes)/ {
    #         return 403;
    #     }

    #     # Block HEAD and TRACE requests
    #     if ($request_method ~* (HEAD|TRACE)) {
    #         return 403;
    #     }

    #     # Block malicious User-Agents
    #     if ($blocked_user_agent) {
    #         return 403;
    #     }

    #     location ~* \.(git|env|config|dockerignore|gitignore|npmrc|yarnrc|bashrc|bash_profile|zshrc|DS_Store|thumbs\.db|desktop\.ini|gitmodules|composer\.json|package\.json|Pipfile|Pipfile\.lock|requirements\.txt|sqlite3|db|tmp|logs|backups|cache|error_log|access_log|secrets\.json|wp-admin) { 
    #         deny all; 
    #         return 403; 
    #     } 
    # }

}